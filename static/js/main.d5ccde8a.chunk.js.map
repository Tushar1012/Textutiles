{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","class","role","msg","Navbar","className","mode","href","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundcolour","onChange","Event","target","rows","newText","toUpperCase","App","setMode","setAlert","showAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5ccde8a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div>\r\n                <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                <strong>{props.alert.msg}</strong> \r\n                \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link disabled\" href=\"#\">About</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n              </li> */}\r\n            </ul>\r\n            \r\n              <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\" :\"light\"}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label \"  htmlFor=\"flexSwitchCheckDefault\"> Darkmode switch</label>\r\n              </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nfunction TextForm(props) {\r\n    const [text, setText] = useState();\r\n    const handleUpclick = ()  => {\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n    }\r\n    const handleOnChange = (Event) =>{\r\n      setText(Event.target.value);\r\n    }\r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"mb-3\"  style={{color: props.mode===\"dark\"?\"yellow\" :\"black\"}}>\r\n        <h2>{props.heading} </h2>\r\n       \r\n        <textarea\r\n          value={text}\r\n          style={{backgroundcolour: props.mode===\"dark\"? \"Grey\": \"white\", color:props.mode=== \"dark\"?\"white\": \"black\"}}\r\n\r\n          onChange={handleOnChange}\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"10\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"button\" onClick={handleUpclick} className=\"btn btn-primary\">\r\n        Convert to Uppercase\r\n      </button>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextForm;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"dark\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message) => {\n    setAlert({\n      msg: message,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"gray\";\n      showAlert(\"Dark mode has been enables\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\");\n    }\n  };\n  return (\n    // <Router>\n    <div className=\"App\">\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <TextForm heading=\"Enter your Text below\" />\n          {/* <Switch>\n            <Route  path=\"/About\">\n              <About />\n            </Route>\n            <Route path=\"/\">\n              \n            </Route>\n          </Switch> */}\n        \n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}